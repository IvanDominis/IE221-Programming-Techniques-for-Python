{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["fHHqy9O5y8XI","j2E32AXg4WFx","ly6Sx1Lv9VGe","Nq4_K-GBBy3E","A1FKb2W3FPJn","44cCIJiOHmil","lsqQ429OpqUK","o5DJEWVquR42","qeVgWzxFwVGK","BRS8GstOwY9q","09k_IYJgweRT","Hhgo33Gywg07","e5KTrlb8_KwO"],"authorship_tag":"ABX9TyMcr5pe89NhJ50PsJbHWUig"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Bài tập 1:"],"metadata":{"id":"fHHqy9O5y8XI"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-frjZobPy0zJ","executionInfo":{"status":"ok","timestamp":1681874102915,"user_tz":-420,"elapsed":37655,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"8b8e6949-f668-47f8-ceba-94057c997de8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Nhap ten sach: Manipulation Art\n","Nhap ten tac gia: Ivan\n","Nhap gia ban: 99000\n","Ten sach: Manipulation Art ,Tac gia: Ivan ,Gia: 99000\n","Nhap so luong quyen sach can mua: 10\n","Tong gia tien: 990000 VND\n"]}],"source":["# Xây dựng lớp Book (sách) có các thuộc tính: Title (tên sách), Author (tên tác giả), Price (giá bán).\n","class Book():\n","  def _init_(self,title,author,price):\n","    self.title = title\n","    self.author = author\n","    self.price = price\n","  # Xây dựng phương thức khởi tạo để khởi tạo các thuộc tính của một quyển sách với các giá trị do người dùng nhập vào.\n","  def nhap(self):\n","    self.title = input('Nhap ten sach: ')\n","    self.author = input('Nhap ten tac gia: ')\n","    self.price = int(input('Nhap gia ban: '))\n","  # Xây dựng phương thức in thông tin để hiển thị thông tin của quyển sách vừa nhập.\n","  def xuat(self):\n","    print('Ten sach:',self.title,',Tac gia:',self.author,',Gia:',self.price)\n","  # Xây dựng phương thức tính tiền để tính số tiền cần trả khi mua n quyển sách cùng loại với quyển sách vừa nhập (n được nhập từ bàn phím).\n","  def tinhtien(self):\n","    n = int(input('Nhap so luong quyen sach can mua: '))\n","    return n*self.price\n","\n","A = Book()\n","A.nhap()\n","A.xuat()\n","print('Tong gia tien:',A.tinhtien(),'VND')"]},{"cell_type":"markdown","source":["#Bài tập 6"],"metadata":{"id":"j2E32AXg4WFx"}},{"cell_type":"code","source":["# Xây dựng lớp biểu diễn khái niệm số phức với hai thuộc tính thực, ảo và các phương thức xuất, nhập số phức, cộng, trừ, nhân, chia số phức\n","class complex_num():\n","  def _init_(self,a,b):\n","    self.a = a\n","    self.b = b\n","  def nhap(self):\n","    self.a = int(input('Nhap phan thuc: '))\n","    self.b = int(input('Nhap phan ao: '))\n","  def xuat(self):\n","    print('So phuc: '+str(self.a)+' + '+str(self.b)+'i')\n","    # Viết chương trình cho phép nhập vào hai số phức, in ra kết quả các phép toán cộng, trừ, nhân, chia hai số phức kể trên.\n","  def cong(self,k):\n","    Tong = complex_num()\n","    Tong.a = self.a+k.a\n","    Tong.b = self.b+k.b\n","    return Tong\n","  def tru(self,k):\n","    Hieu = complex_num()\n","    Hieu.a = self.a-k.a\n","    Hieu.b = self.b-k.b\n","    return Hieu\n","  def nhan(self,k):\n","    Tich = complex_num()\n","    Tich.a = self.a*k.a-k.a*k.b\n","    Tich.b = self.a*k.b+self.b*k.a\n","    return Tich\n","  def chia(self,k):\n","    Thuong = complex_num()\n","    Thuong.a =  (self.a*k.a+self.b*k.b)/(k.a**2+k.b**2)\n","    Thuong.b =  (self.b*k.a-self.a*k.b)/(k.a**2+k.b**2)\n","    return Thuong\n","\n","A = complex_num()\n","B = complex_num()\n","A.nhap()\n","B.nhap()\n","t = A.cong(B)\n","t.xuat()\n","h = A.tru(B)\n","h.xuat()\n","tich = A.nhan(B)\n","tich.xuat()\n","thuong = A.chia(B)\n","thuong.xuat()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qwMCEdDB4Vnx","executionInfo":{"status":"ok","timestamp":1681176987312,"user_tz":-420,"elapsed":5559,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"d7dc48e6-d530-4431-f1c9-5d41df708bc3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhap phan thuc: 2\n","Nhap phan ao: 3\n","Nhap phan thuc: 2\n","Nhap phan ao: 7\n","So phuc: 4 + 10i\n","So phuc: 0 + -4i\n","So phuc: -10 + 20i\n","So phuc: 0.4716981132075472 + -0.1509433962264151i\n"]}]},{"cell_type":"markdown","source":["#Bài tập 7 "],"metadata":{"id":"ly6Sx1Lv9VGe"}},{"cell_type":"code","source":["# Xây dựng lớp Candidate (Thí sinh) gồm các thuộc tính: mã số, họ tên, ngày tháng năm sinh, điểm thi Toán, Văn, Anh \n","# và các phương thức: nhập, xuất thông tin thí sinh, TestCandidate để kiểm tra xem thí sinh nào có tổng điểm  \n","class Candidate():\n","  def _init_(self,id,name,dob,toan,van,anh):\n","    self.id = id\n","    self.name = name\n","    self.dob = dob\n","    self.toan = toan\n","    self.van = van\n","    self.anh = anh\n","  def nhap(self):\n","    self.id = input('Nhập mã số thí sinh: ')\n","    self.name = input('Nhập họ và tên: ')\n","    self.dob = input('Nhập ngày tháng năm sinh: ')\n","    self.toan = float(input('Nhập điểm toán: '))\n","    self.van = float(input('Nhập điểm văn: '))\n","    self.anh = float(input('Nhập điểm anh: '))\n","  def xuat(self):\n","    print('mã số thí sinh:',self.id)\n","    print('họ và tên:',self.name)\n","    print('ngày tháng năm sinh:',self.dob)\n","    print('điểm toán:',self.toan)\n","    print('điểm văn: ',self.van)\n","    print('điểm anh: ',self.anh)\n","  def TestCandidate(self):\n","    return self.toan+self.van+self.anh > 15.0\n","\n","# Nhập vào n thí sinh (n do người dùng nhập, n ≥ 3) và sử dụng phương thức TestCandidate để kiểm tra. In ra thông tin của các thí sinh đạt điều kiện.\n","n = int(input('Nhập số lượng thí sinh: '))\n","DSTS = []\n","for i in range(n):\n","  ts = Candidate()\n","  ts.nhap()\n","  DSTS.append(ts)\n","print('Thí sinh đạt tiêu chuẩn là:')\n","for i in DSTS:\n","  if i.TestCandidate()==True:\n","    i.xuat()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rwewnUpu9XpV","executionInfo":{"status":"ok","timestamp":1681186519939,"user_tz":-420,"elapsed":156584,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"f2ac770e-dde2-40e1-aa96-6d939f97a06c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập số lượng thí sinh: 5\n","Nhập mã số thí sinh: 1\n","Nhập họ và tên: Le Van A\n","Nhập ngày tháng năm sinh: 1/1/2022\n","Nhập điểm toán: 6\n","Nhập điểm văn: 6\n","Nhập điểm anh: 7\n","Nhập mã số thí sinh: 2\n","Nhập họ và tên: Hoang Van B\n","Nhập ngày tháng năm sinh: 2/2/2022\n","Nhập điểm toán: 8\n","Nhập điểm văn: 5\n","Nhập điểm anh: 7\n","Nhập mã số thí sinh: 3\n","Nhập họ và tên: Le Thi C\n","Nhập ngày tháng năm sinh: 3/3/2022\n","Nhập điểm toán: 8\n","Nhập điểm văn: 8\n","Nhập điểm anh: 7\n","Nhập mã số thí sinh: 4\n","Nhập họ và tên: Do Van D\n","Nhập ngày tháng năm sinh: 4/4/2022\n","Nhập điểm toán: 10\n","Nhập điểm văn: 6.5\n","Nhập điểm anh: 7.5\n","Nhập mã số thí sinh: 5\n","Nhập họ và tên: Bui Van E\n","Nhập ngày tháng năm sinh: 5/5/2022\n","Nhập điểm toán: 9\n","Nhập điểm văn: 9\n","Nhập điểm anh: 9\n","Thí sinh đạt tiêu chuẩn là:\n","mã số thí sinh: 1\n","họ và tên: Le Van A\n","ngày tháng năm sinh: 1/1/2022\n","điểm toán: 6.0\n","điểm văn:  6.0\n","điểm anh:  7.0\n","mã số thí sinh: 2\n","họ và tên: Hoang Van B\n","ngày tháng năm sinh: 2/2/2022\n","điểm toán: 8.0\n","điểm văn:  5.0\n","điểm anh:  7.0\n","mã số thí sinh: 3\n","họ và tên: Le Thi C\n","ngày tháng năm sinh: 3/3/2022\n","điểm toán: 8.0\n","điểm văn:  8.0\n","điểm anh:  7.0\n","mã số thí sinh: 4\n","họ và tên: Do Van D\n","ngày tháng năm sinh: 4/4/2022\n","điểm toán: 10.0\n","điểm văn:  6.5\n","điểm anh:  7.5\n","mã số thí sinh: 5\n","họ và tên: Bui Van E\n","ngày tháng năm sinh: 5/5/2022\n","điểm toán: 9.0\n","điểm văn:  9.0\n","điểm anh:  9.0\n"]}]},{"cell_type":"markdown","source":["#Bài tập 14 "],"metadata":{"id":"Nq4_K-GBBy3E"}},{"cell_type":"code","source":["# Xây dựng lớp đa thức bậc nhất để thể hiện các đa thức bậc nhất có dạng: F(x) = ax + b (a luôn khác 0)\n","class DT():\n","  def _init_(self,a,b):\n","    self.a = a\n","    self.b = b\n","  def InDT(self):\n","    if self.b == 0:\n","      print('Đa thức có dạng: '+str(self.a)+'x')\n","    elif self.b > 0:\n","      print('Đa thức có dạng: '+str(self.a)+'x + '+str(self.b))\n","    elif self.b < 0:\n","      print('Đa thức có dạng: '+str(self.a)+'x - '+str(self.b))\n","  # Phương thức xác định giá trị của đa thức tương ứng với giá trị x = xO.\n","  def TinhGT(self,x0):\n","    return self.a*x0+self.b\n","  # Phương thức trả về nghiệm đa thức bậc nhất (nghĩa là F(x) = 0).\n","  def Nghiem(self):\n","    return -self.b/self.a\n","  # Phương thức trả về kết quả của phép cộng hai đa thức bậc nhất.\n","  def Cong(self,k):\n","    Tong = DT()\n","    Tong.a = self.a+k.a\n","    Tong.b = self.b+k.b\n","    return Tong      \n","\n","A = DT()\n","A.a= 7\n","A.b= 9\n","B = DT()\n","B.a = 8\n","B.b = 9\n","A.InDT()\n","B.InDT()\n","x = int(input('Nhập giá trị x= '))\n","print('Giá trị của đa thức khi thay x=',x,'vào đa thức là:',A.TinhGT(x))\n","print('Nghiệm của đa thức:',A.Nghiem())\n","C = A.Cong(B)\n","C.InDT()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sWULq3s7BxwL","executionInfo":{"status":"ok","timestamp":1681186998023,"user_tz":-420,"elapsed":2577,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"a39c1369-4093-4425-e389-8f74bc743855"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Đa thức có dạng: 7x + 9\n","Đa thức có dạng: 8x + 9\n","Nhập giá trị x= 5\n","Giá trị của đa thức khi thay x= 5 vào đa thức là: 44\n","Nghiệm của đa thức: -1.2857142857142858\n","Đa thức có dạng: 15x + 18\n"]}]},{"cell_type":"markdown","source":["#Bài tập 8 "],"metadata":{"id":"A1FKb2W3FPJn"}},{"cell_type":"code","source":["# Xây dựng lớp String biểu diễn khái niệm chuỗi ký tự có phương thức thiết lập,\n","# nhập, xuất chuỗi, tính chiều dài chuỗi, nối hai chuỗi, đảo chuỗi.\n","class myString():\n","  def _init_(self):\n","    self.mystr = ''\n","  def nhap(self):\n","    self.mystr = input('Nhập chuỗi ký tự: ')\n","  def xuat(self):\n","    print('Chuỗi đã nhập: ',self.mystr)\n","  def tinhchieudai(self):\n","    return len(self.mystr)\n","  def noihaichuoi(self,s):\n","    return self.mystr+s.mystr\n","  def daochuoi(self):\n","    return self.mystr[::-1]\n","\n","A = myString()\n","A.nhap()\n","A.xuat()\n","print('Độ dài của chuỗi là:',A.tinhchieudai())\n","B = myString()\n","B.nhap()\n","print('Chuỗi sau khi nối 2 chuỗi với nhau:',A.noihaichuoi(B))\n","print('Chuỗi đảo ngược:',A.daochuoi())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zdDjv0PjFS8W","executionInfo":{"status":"ok","timestamp":1681186714412,"user_tz":-420,"elapsed":12795,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"5eae554a-74da-40a5-82cf-f507abb0c3ed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập chuỗi ký tự: I am \n","Chuỗi đã nhập:  I am \n","Độ dài của chuỗi là: 5\n","Nhập chuỗi ký tự: so sleepy\n","Chuỗi sau khi nối 2 chuỗi với nhau: I am so sleepy\n","Chuỗi đảo ngược:  ma I\n"]}]},{"cell_type":"markdown","source":["#Bài tập 16 "],"metadata":{"id":"44cCIJiOHmil"}},{"cell_type":"code","source":["# Xây dựng lớp sinh viên với các thuộc tính như sau: Mã số sinh viên, Họ tên sinh viên, Điểm môn Giải tích,\n","# Điểm môn Giới thiệu ngành, Điểm môn Nhập môn lập trình,Điểm trung bình.\n","class SinhVien():\n","  def _init_(self,id,name,dob,GT,GTN,NMLT,DTB):\n","    self.id = id\n","    self.name = name\n","    self.dob = dob\n","    self.GT = GT\n","    self.GTN = GTN\n","    self.NMLT = NMLT\n","    self.DTB = DTB\n","  def nhap(self):\n","    self.id = input('Nhập mã số sinh viên: ')\n","    self.name = input('Nhập họ tên sinh viên: ')\n","    self.dob = input('Nhập ngày tháng năm sinh: ')\n","    self.GT = float(input('Nhập điểm môn Giải tích: '))\n","    self.GTN = float(input('Nhập điểm môn Giới thiệu ngành: '))\n","    self.NMLT = float(input('Nhập điểm môn Nhập môn lập trình: '))\n","    self.DTB = (self.GT+self.GTN+self.NMLT)/3\n","  def xuat(self):\n","    print('MSSV:',self.id)\n","    print('Tên:',self.name)\n","    print('Năm sinh:',self.dob)\n","    print('Điểm trung bình:', self.DTB)\n","  # Nhà trường muốn trao học bổng cho những sinh viên có thành tích học xuất sắc. Điều kiện để trao học bổng là điểm trung bình >= 8.0 và điểm Nhập môn\n","  # lập trình >= 9.0. Hãy liệt kê danh sách sinh viên được nhận học bổng.\n","  def Hocbong(self):\n","    return self.DTB>=8.0 and self.NMLT>=9.0\n","# Nhập danh sách sinh viên.\n","n = int(input('Nhập số lượng sinh viên: '))\n","DSSV = []\n","for i in range(n):\n","  sv = SinhVien()\n","  sv.nhap()\n","  DSSV.append(sv)\n","max = 0\n","print('Sinh viên nhận được học bổng: ')\n","for i in DSSV:\n","  if i.Hocbong() == True:\n","    i.xuat()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zYZ9DMKqHs1s","executionInfo":{"status":"ok","timestamp":1681188512062,"user_tz":-420,"elapsed":308506,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"ef8bacf7-aec0-4558-a2b8-7343bee866b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập số lượng sinh viên: 14\n","Nhập mã số sinh viên: 1\n","Nhập họ tên sinh viên: A\n","Nhập ngày tháng năm sinh: 6/2/2022\n","Nhập điểm môn Giải tích: 8.5\n","Nhập điểm môn Giới thiệu ngành: 10\n","Nhập điểm môn Nhập môn lập trình: 9\n","Nhập mã số sinh viên: 2\n","Nhập họ tên sinh viên: B\n","Nhập ngày tháng năm sinh: 26/8/2022\n","Nhập điểm môn Giải tích: 9\n","Nhập điểm môn Giới thiệu ngành: 9\n","Nhập điểm môn Nhập môn lập trình: 9\n","Nhập mã số sinh viên: 3\n","Nhập họ tên sinh viên: C\n","Nhập ngày tháng năm sinh: 4/7/2022\n","Nhập điểm môn Giải tích: 7\n","Nhập điểm môn Giới thiệu ngành: 9\n","Nhập điểm môn Nhập môn lập trình: 8.5\n","Nhập mã số sinh viên: 4\n","Nhập họ tên sinh viên: D\n","Nhập ngày tháng năm sinh: 1/2/2022\n","Nhập điểm môn Giải tích: 8\n","Nhập điểm môn Giới thiệu ngành: 10\n","Nhập điểm môn Nhập môn lập trình: 9.5\n","Nhập mã số sinh viên: 5\n","Nhập họ tên sinh viên: E\n","Nhập ngày tháng năm sinh: 28/5/2022\n","Nhập điểm môn Giải tích: 7\n","Nhập điểm môn Giới thiệu ngành: 8.5\n","Nhập điểm môn Nhập môn lập trình: 9.5\n","Nhập mã số sinh viên: 6\n","Nhập họ tên sinh viên: F\n","Nhập ngày tháng năm sinh: 16/12/2002\n","Nhập điểm môn Giải tích: 7\n","Nhập điểm môn Giới thiệu ngành: 9\n","Nhập điểm môn Nhập môn lập trình: 8.5\n","Nhập mã số sinh viên: 7\n","Nhập họ tên sinh viên: G\n","Nhập ngày tháng năm sinh: 1/11/2022\n","Nhập điểm môn Giải tích: 9\n","Nhập điểm môn Giới thiệu ngành: 10\n","Nhập điểm môn Nhập môn lập trình: 8\n","Nhập mã số sinh viên: 8\n","Nhập họ tên sinh viên: H\n","Nhập ngày tháng năm sinh: 5/4/2022\n","Nhập điểm môn Giải tích: 5\n","Nhập điểm môn Giới thiệu ngành: 7\n","Nhập điểm môn Nhập môn lập trình: 6\n","Nhập mã số sinh viên: 9\n","Nhập họ tên sinh viên: I\n","Nhập ngày tháng năm sinh: 18/1/2022\n","Nhập điểm môn Giải tích: 7\n","Nhập điểm môn Giới thiệu ngành: 8\n","Nhập điểm môn Nhập môn lập trình: 7\n","Nhập mã số sinh viên: 10\n","Nhập họ tên sinh viên: J\n","Nhập ngày tháng năm sinh: 24/7/2022\n","Nhập điểm môn Giải tích: 7\n","Nhập điểm môn Giới thiệu ngành: 10\n","Nhập điểm môn Nhập môn lập trình: 9\n","Nhập mã số sinh viên: 11\n","Nhập họ tên sinh viên: M\n","Nhập ngày tháng năm sinh: 1/4/2022\n","Nhập điểm môn Giải tích: 8\n","Nhập điểm môn Giới thiệu ngành: 9\n","Nhập điểm môn Nhập môn lập trình: 8\n","Nhập mã số sinh viên: 12\n","Nhập họ tên sinh viên: N\n","Nhập ngày tháng năm sinh: 7/7/2022\n","Nhập điểm môn Giải tích: 9\n","Nhập điểm môn Giới thiệu ngành: 9.5\n","Nhập điểm môn Nhập môn lập trình: 9\n","Nhập mã số sinh viên: 13\n","Nhập họ tên sinh viên: O\n","Nhập ngày tháng năm sinh: 4/2/2022\n","Nhập điểm môn Giải tích: 9\n","Nhập điểm môn Giới thiệu ngành: 10\n","Nhập điểm môn Nhập môn lập trình: 8.5\n","Nhập mã số sinh viên: 14\n","Nhập họ tên sinh viên: V\n","Nhập ngày tháng năm sinh: 19/8/2022\n","Nhập điểm môn Giải tích: 7\n","Nhập điểm môn Giới thiệu ngành: 5\n","Nhập điểm môn Nhập môn lập trình: 6\n","Sinh viên nhận được học bổng: \n","MSSV: 1\n","Tên: A\n","Năm sinh: 6/2/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 2\n","Tên: B\n","Năm sinh: 26/8/2022\n","Điểm trung bình: 9.0\n","MSSV: 4\n","Tên: D\n","Năm sinh: 1/2/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 5\n","Tên: E\n","Năm sinh: 28/5/2022\n","Điểm trung bình: 8.333333333333334\n","MSSV: 10\n","Tên: J\n","Năm sinh: 24/7/2022\n","Điểm trung bình: 8.666666666666666\n","MSSV: 12\n","Tên: N\n","Năm sinh: 7/7/2022\n","Điểm trung bình: 9.166666666666666\n"]}]},{"cell_type":"code","source":["# Xuất thông tin những sinh viên có điểm trung bình cao nhất.\n","def diemTB(l):\n","  return l.DTB\n","DSSV.sort(key =diemTB,reverse=True)\n","print('Danh sách sinh viên có điểm trung bình cao nhất: ')\n","\n","# Sắp xếp danh sách sinh viên giảm dần theo điểm trung bình. Xuất danh sách top 10 sinh viên có điểm cao nhất.\n","max = DSSV[0].DTB\n","for i in DSSV:\n","  if max == i.DTB:\n","    i.xuat()\n","print('Danh sách 10 sinh viên có điểm trung bình cao nhất: ')\n","for i in range(10):\n","    DSSV[i].xuat()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"67qzoIEOLfww","executionInfo":{"status":"ok","timestamp":1681188575836,"user_tz":-420,"elapsed":351,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"5cf35521-54a0-4670-b7e1-0de2e9ea4232"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Danh sách sinh viên có điểm trung bình cao nhất: \n","MSSV: 1\n","Tên: A\n","Năm sinh: 6/2/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 4\n","Tên: D\n","Năm sinh: 1/2/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 12\n","Tên: N\n","Năm sinh: 7/7/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 13\n","Tên: O\n","Năm sinh: 4/2/2022\n","Điểm trung bình: 9.166666666666666\n","Danh sách 10 sinh viên có điểm trung bình cao nhất: \n","MSSV: 1\n","Tên: A\n","Năm sinh: 6/2/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 4\n","Tên: D\n","Năm sinh: 1/2/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 12\n","Tên: N\n","Năm sinh: 7/7/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 13\n","Tên: O\n","Năm sinh: 4/2/2022\n","Điểm trung bình: 9.166666666666666\n","MSSV: 2\n","Tên: B\n","Năm sinh: 26/8/2022\n","Điểm trung bình: 9.0\n","MSSV: 7\n","Tên: G\n","Năm sinh: 1/11/2022\n","Điểm trung bình: 9.0\n","MSSV: 10\n","Tên: J\n","Năm sinh: 24/7/2022\n","Điểm trung bình: 8.666666666666666\n","MSSV: 5\n","Tên: E\n","Năm sinh: 28/5/2022\n","Điểm trung bình: 8.333333333333334\n","MSSV: 11\n","Tên: M\n","Năm sinh: 1/4/2022\n","Điểm trung bình: 8.333333333333334\n","MSSV: 3\n","Tên: C\n","Năm sinh: 4/7/2022\n","Điểm trung bình: 8.166666666666666\n"]}]},{"cell_type":"markdown","source":["# Bài tập 20 "],"metadata":{"id":"lsqQ429OpqUK"}},{"cell_type":"code","source":["\n","class NhanVien():\n","  def _init_(self,name,dob,lcb):\n","    self.name = name\n","    self.dob = dob\n","    self.lcb = lcb\n","  # Nhập thông tin của các nhân viên để phục vụ cho việc tính lương.\n","  def nhap(self):\n","    self.name = input('Nhập tên nhân viên: ')\n","    self.dob = input('Nhập ngày sinh: ')\n","    self.lcb = int(input('Nhập lương cơ bản: '))\n","  # Xuất thông tin của các nhân viên.\n","  def xuat(self):\n","    print('Tên:',self.name,',Ngày sinh:',self.dob,',Lương cơ bản:',self.lcb)\n","\n","class NVVanPhong(NhanVien):\n","  def _init_(self,wd,allowance):\n","    NhanVien._init(self)\n","    self.wd = wd\n","    self.allowance = allowance\n","  def nhap(self):\n","\n","    NhanVien.nhap(self)\n","    self.wd = int(input('Số ngày làm việc: '))\n","    self.allowance = int(input('Trợ cấp: '))\n","  def xuat(self):\n","\n","    NhanVien.xuat(self)\n","    print('Số ngày làm việc:',self.wd,',Trợ cấp:',self.allowance)\n","  #  Thực hiện việc tính lương cho từng nhân viên.\n","  def TinhLuong(self):\n","    return self.lcb + self.wd*100000 + self.allowance\n","  \n","class NVSanXuat(NhanVien):\n","  def _init_(self,product):\n","    NhanVien._init(self)\n","    self.product = product\n","  def nhap(self):\n","    NhanVien.nhap(self)\n","    self.product = int(input('Số sản phẩm làm ra: '))\n","  def xuat(self):\n","    NhanVien.xuat(self)\n","    print('Số sản phẩm làm ra:',self.product)\n","  # Thực hiện việc tính lương cho từng nhân viên.\n","  def TinhLuong(self):\n","    return self.lcb + self.product*2000\n","\n","class NVQuanLy(NhanVien):\n","  def _init_(self,hs,bonus):\n","    NhanVien._init(self)\n","    self.hs = hs\n","    self.bonus = bonus\n","  def nhap(self):\n","    NhanVien.nhap(self)\n","    self.hs = int(input('Hệ số chức vụ: '))\n","    self.bonus = int(input('Thưởng: '))\n","  def xuat(self):\n","    NhanVien.xuat(self)\n","    print('Hệ số chức vụ:',self.hs,',Thưởng:',self.bonus)\n","  # Thực hiện việc tính lương cho từng nhân viên.\n","  def TinhLuong(self):\n","    return self.lcb*self.hs + self.bonus"],"metadata":{"id":"2f7I9wKgpo1r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["A = NVVanPhong()\n","A.nhap()\n","A.xuat()\n","print('Lương:',A.TinhLuong())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"csnkcVG5hSCA","executionInfo":{"status":"ok","timestamp":1681204485931,"user_tz":-420,"elapsed":21588,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"df57b236-5e50-4bc7-eb0e-606cf16d99ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập tên nhân viên: Hoàng Đình Hữu\n","Nhập ngày sinh: 6/6/2002\n","Nhập lương cơ bản: 6000000\n","Số ngày làm việc: 15\n","Trợ cấp: 50000\n","Tên: Hoàng Đình Hữu ,Ngày sinh: 6/6/2002 ,Lương cơ bản: 6000000\n","Số ngày làm việc: 15 ,Trợ cấp: 50000\n","Lương: 7550000\n"]}]},{"cell_type":"code","source":["DSNV = []\n","print('Chú thích:')\n","print('0: Nhân viên văn phòng')\n","print('1: Nhân viên sản xuất')\n","print('2: Nhân viên quản lý')\n","n = int(input('Số lượng nhân viên trong công ty: '))\n","sum = 0\n","for i in range(n):\n","  d = int(input('Vui lòng chọn loại nhân viên:'))\n","  if d == 0:\n","    A = NVVanPhong()\n","    A.nhap()\n","    DSNV.append(A)\n","    print('Lương:', A.TinhLuong(),'VND')\n","  elif d == 1:\n","    B = NVSanXuat()\n","    B.nhap()\n","    DSNV.append(B)\n","    print('Lương:', B.TinhLuong(),'VND')\n","  elif d == 2:\n","    C = NVQuanLy()\n","    C.nhap()\n","    DSNV.append(C)\n","    print('Lương:', C.TinhLuong(),'VND')\n","\n","# Tính tổng lương của công ty\n","for nv in DSNV:\n","  nv.xuat()\n","  sum+=nv.TinhLuong()\n","print('Tổng lương của công ty:',sum)\n","\n","# Tìm kiếm một nhân viên theo họ tên.\n","s = input('Nhập họ tên nhân viên cần tìm: ')\n","for nv in DSNV:\n","  if s == nv.name:\n","    nv.xuat()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8gTdjduOfbE6","executionInfo":{"status":"ok","timestamp":1681205037097,"user_tz":-420,"elapsed":323828,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"495a775f-749b-4ea4-e7c0-d6a2f3bc0dbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Chú thích:\n","0: Nhân viên văn phòng\n","1: Nhân viên sản xuất\n","2: Nhân viên quản lý\n","Số lượng nhân viên trong công ty: 3\n","Vui lòng chọn loại nhân viên:0\n","Nhập tên nhân viên: Lê Văn Rác\n","Nhập ngày sinh: 15/1/2002\n","Nhập lương cơ bản: 10000000\n","Số ngày làm việc: 15\n","Trợ cấp: 3000000\n","Lương: 14500000 VND\n","Vui lòng chọn loại nhân viên:1\n","Nhập tên nhân viên: Nguyễn Thành Bịp\n","Nhập ngày sinh: 2/11/2002\n","Nhập lương cơ bản: 9000000\n","Số sản phẩm làm ra: 10\n","Lương: 9020000 VND\n","Vui lòng chọn loại nhân viên:2\n","Nhập tên nhân viên: Lê Nguyễn Tiến Dapeo\n","Nhập ngày sinh: 12/10/2002\n","Nhập lương cơ bản: 100000000\n","Hệ số chức vụ: 2\n","Thưởng: 50000\n","Lương: 200050000 VND\n","Tên: Lê Văn Rác ,Ngày sinh: 15/1/2002 ,Lương cơ bản: 10000000\n","Số ngày làm việc: 15 ,Trợ cấp: 3000000\n","Tên: Nguyễn Thành Bịp ,Ngày sinh: 2/11/2002 ,Lương cơ bản: 9000000\n","Số sản phẩm làm ra: 10\n","Tên: Lê Nguyễn Tiến Dapeo ,Ngày sinh: 12/10/2002 ,Lương cơ bản: 100000000\n","Hệ số chức vụ: 2 ,Thưởng: 50000\n","Tổng lương của công ty: 223570000\n","Nhập họ tên nhân viên cần tìm: Lê Văn Rác\n","Tên: Lê Văn Rác ,Ngày sinh: 15/1/2002 ,Lương cơ bản: 10000000\n","Số ngày làm việc: 15 ,Trợ cấp: 3000000\n"]}]},{"cell_type":"markdown","source":["# Bài tập 25 "],"metadata":{"id":"o5DJEWVquR42"}},{"cell_type":"code","source":["class store():\n","  def _init_(self,num,s,income):\n","    self.num = num\n","    self.s = s\n","    self.income = income\n","  def nhap(self):\n","    self.num = int(input('Nhập số thứ tự của sạp: '))\n","    self.s = int(input('Nhập diện tích sạp: '))\n","    self.income = int(input('Nhập doanh thu của sạp: '))\n","  def xuat(self):\n","    print('Số thứ tự của sạp:',self.num,',Diện tích sạp:',self.s,'m2')\n","    print('Doanh thu của sạp:',self.income,'VND')\n","  \n","class food_store(store):\n","  def _init_(self,electric_bill):\n","    store._init_(self)\n","    self.e = electric_bill\n","  def nhap(self):\n","    store.nhap(self)\n","    self.e = int(input('Tiền sử dụng dịch vụ đông lạnh: '))\n","  # Tính tổng số tiền các sạp được thuê phải đóng hàng năm.\n","  def TienThue(self):\n","    return 40000000*self.s + 0.05*self.income + self.e\n","\n","class clothing_store(store):\n","  # Tính tổng số tiền các sạp được thuê phải đóng hàng năm.\n","  def TienThue(self):\n","    return 40000000*self.s + 0.1*self.income\n","\n","class jewelry_store(store):\n","  # Tính tổng số tiền các sạp được thuê phải đóng hàng năm.\n","  def TienThue(self):\n","    if self.income <= 100000000:\n","      return 40000000*self.s + 0.2*self.income\n","    return 40000000*self.s + 0.3*self.income\n"],"metadata":{"id":"_sbeCFvkuRZo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["A = jewelry_store()\n","A.nhap()\n","A.xuat()\n","print('Tiền thuê sạp:', A.TienThue(),'VND')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uTMefq6XtS91","executionInfo":{"status":"ok","timestamp":1681206618431,"user_tz":-420,"elapsed":16701,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"dbc90c40-caa5-48c3-87fb-8722aa5082f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập số thứ tự của sạp: 4\n","Nhập diện tích sạp: 40\n","Nhập doanh thu của sạp: 125000000\n","Số thứ tự của sạp: 4 ,Diện tích sạp: 40 m2\n","Doanh thu của sạp: 125000000 VND\n","Tiền thuê sạp: 1637500000.0 VND\n"]}]},{"cell_type":"code","source":["B = jewelry_store()\n","B.nhap()\n","B.xuat()\n","print('Tiền thuê sạp:', B.TienThue(),'VND')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZRhaulruuUN3","executionInfo":{"status":"ok","timestamp":1681206650644,"user_tz":-420,"elapsed":11848,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"0de8ee4f-ef40-4c55-91f2-ae53c67b042d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập số thứ tự của sạp: 5\n","Nhập diện tích sạp: 40\n","Nhập doanh thu của sạp: 95000000\n","Số thứ tự của sạp: 5 ,Diện tích sạp: 40 m2\n","Doanh thu của sạp: 95000000 VND\n","Tiền thuê sạp: 1619000000.0 VND\n"]}]},{"cell_type":"code","source":["# Nhập vào danh sách thông tin các sạp được thuê.\n","DSCH = []\n","n = int(input('Nhập số sạp: '))\n","print('Chú thích:')\n","print('0: Sạp thực phẩm')\n","print('1: Sạp quần áo')\n","print('2: Sạp trang sức')\n","for i in range(n):\n","  d = int(input('Vui lòng chọn loại sạp: '))\n","  if d == 0:\n","    A = food_store()\n","    A.nhap()\n","    DSCH.append(A)\n","  elif d == 1:\n","    B =  clothing_store()\n","    B.nhap()\n","    DSCH.append(B)\n","  elif d == 2:\n","    C = jewelry_store()\n","    C.nhap()\n","    DSCH.append(C)\n","\n","sum = 0\n","for shop in DSCH:\n","  sum+= shop.TienThue()\n","\n","print('Tổng số tiền các sạp được thuê phải đóng hàng năm:',sum,'VND')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FNYFBPzJud2L","executionInfo":{"status":"ok","timestamp":1681207129832,"user_tz":-420,"elapsed":126382,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"1cab563f-ba49-4e11-e20d-d85252f822e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập số sạp: 5\n","Chú thích:\n","0: Sạp thực phẩm\n","1: Sạp quần áo\n","2: Sạp trang sức\n","Vui lòng chọn loại sạp: 1\n","Nhập số thứ tự của sạp: 1\n","Nhập diện tích sạp: 30\n","Nhập doanh thu của sạp: 70000000\n","Vui lòng chọn loại sạp: 3\n","Vui lòng chọn loại sạp: 2\n","Nhập số thứ tự của sạp: 2\n","Nhập diện tích sạp: 40\n","Nhập doanh thu của sạp: 200000000\n","Vui lòng chọn loại sạp: 1\n","Nhập số thứ tự của sạp: 3\n","Nhập diện tích sạp: 25\n","Nhập doanh thu của sạp: 90000000\n","Vui lòng chọn loại sạp: 2\n","Nhập số thứ tự của sạp: 4\n","Nhập diện tích sạp: 50\n","Nhập doanh thu của sạp: 95000000\n","Tổng số tiền các sạp được thuê phải đóng hàng năm: 5895000000.0 VND\n"]}]},{"cell_type":"markdown","source":["# Bài tập 4 \n"],"metadata":{"id":"qeVgWzxFwVGK"}},{"cell_type":"code","source":["# Xây dựng lớp SoNguyen để biểu diễn khái niệm số nguyên và các phương thức xuất, nhập số nguyên, cộng, trừ, nhân, chia số nguyên.\n","class myInteger():\n","  def _init_(self):\n","    self.myInt = 0\n","  def nhap(self):\n","    self.myInt = int(input('Nhập số nguyên: '))\n","  def xuat(self):\n","    print('Số nguyên vừa nhập là:', self.myInt)\n","  # Viết chương trình cho phép nhập vào hai số nguyên, in ra kết quả các phép toán cộng, trừ, nhân, chia hai số nguyên kể trên.\n","  def cong(self,a):\n","    sum = myInteger()\n","    sum.myInt = self.myInt + a.myInt\n","    return sum\n","  def tru(self,a):\n","    sub = myInteger()\n","    sub.myInt = self.myInt - a.myInt\n","    return sub\n","  def nhan(self,a):\n","    multi = myInteger()\n","    multi.myInt = self.myInt * a.myInt\n","    return multi\n","  def chia(self,a):\n","    div = myInteger()\n","    div.myInt = self.myInt / a.myInt\n","    return div\n","  "],"metadata":{"id":"Bu96TrVfwX_b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["A = myInteger()\n","A.nhap()\n","A.xuat()\n","B = myInteger()\n","B.nhap()\n","C = A.cong(B)\n","C.xuat()\n","D = A.tru(B)\n","D.xuat()\n","E = A.nhan(B)\n","E.xuat()\n","F = A.chia(B)\n","F.xuat()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G5Fph3No1p3Z","executionInfo":{"status":"ok","timestamp":1681208730909,"user_tz":-420,"elapsed":8607,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"a0d09752-955e-4e9d-d927-ea91e62a9623"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập số nguyên: 25\n","Số nguyên vừa nhập là: 25\n","Nhập số nguyên: 5\n","Số nguyên vừa nhập là: 30\n","Số nguyên vừa nhập là: 20\n","Số nguyên vừa nhập là: 125\n","Số nguyên vừa nhập là: 5.0\n"]}]},{"cell_type":"markdown","source":["# Bài tập 9\n"],"metadata":{"id":"BRS8GstOwY9q"}},{"cell_type":"code","source":["# Xây dựng lớp Rectangle (hình chữ nhật) cho phép xây dựng một hình chữ nhật với các thuộc tính Length (chiều dài) và Width (chiều rộng).\n","class Rectangle():\n","  def _init_(self,length,width):\n","    self.l = length\n","    self.w = width\n","  # Xây dựng phương thức display hiển thị chiều dài, chiều rộng, chu vi và diện tích của một đối tượng hình chữ nhật.\n","  def display(self):\n","    print('Chiều dài:',self.l)\n","    print('Chiều rộng:',self.w)\n","    print('Chu vi:', self.calcPerimeter()) #(self.l+self.w)*2\n","    print('Diện tích:', self.calcArea()) # self.l*self.w\n","  # Xây dựng phương thức calcPerimeter để tính chu vi hình chữ nhật và phương thức calcArea để tính diện tích hình chữ nhật\n","  def calcPerimeter(self):\n","    return 2*(self.w+self.l)\n","  def calcArea(self):\n","    return self.l*self.w\n","# Xây dựng lớp con Parallelpipe kế thừa từ lớp Rectangle với thuộc tính Height (chiều cao) và phương thức volume khác để tính thể tích của Parallelpipe.\n","class Parallelpipe(Rectangle):\n","  def _init_(self,Height):\n","    Rectangle._init_(self)\n","    self.h = Height\n","  def volume(self):\n","    return self.calcArea()*self.h"],"metadata":{"id":"ALw7Sozzwl_p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Hình chữ nhật \n","a = Rectangle()\n","a.l = 5\n","a.w = 6\n","a.display()\n","# Hình hộp chữ nhật \n","b = Parallelpipe()\n","b.l, b.w, b.h = 5, 8, 6\n","b.display()\n","print('Thể tích:',b.volume())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uDqtm7KR7yfD","executionInfo":{"status":"ok","timestamp":1681713784886,"user_tz":-420,"elapsed":871,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"d1078f77-0166-4542-dd33-f26d5e3c007d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Chiều dài: 5\n","Chiều rộng: 6\n","Chu vi: 22\n","Diện tích: 30\n","Chiều dài: 5\n","Chiều rộng: 8\n","Chu vi: 26\n","Diện tích: 40\n","Thể tích: 240\n"]}]},{"cell_type":"markdown","source":["# Bài tập 10"],"metadata":{"id":"09k_IYJgweRT"}},{"cell_type":"code","source":["# Xây dựng lớp Person (người) với các thuộc tính: Name (tên) và Age (tuổi)\n","class Person():\n","  def _init_(self,Name,Age):\n","    self.Name = Name\n","    self.Age = Age\n","  # Xây dựng phương thức Display hiển thị tên và tuổi của một đối tượng được tạo thông qua lớp Person.\n","  def display(self):\n","    print('Họ và tên:',self.Name)\n","    print('Tuổi:',self.Age)\n","# Xây dựng lớp con Student (sinh viên) kế thừa từ lớp Person có phương thức displayStudent hiển thị tên và tuổi của một đối tượng sinh viên.\n","class Student(Person):\n","  # Xây dựng lớp con Student (sinh viên) kế thừa từ lớp Person có phương thức displayStudent hiển thị tên và tuổi của một đối tượng sinh viên.\n","  def displayStudent(self):\n","    Person.display(self)"],"metadata":{"id":"wsuU9X95wlXy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a = Person()\n","a.Name = 'Lê Văn A'\n","a.Age = 20\n","a.display()\n","b = Student()\n","b.Name = 'Lê Văn B'\n","b.Age = 18\n","b.displayStudent()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7HALYHHT-ABQ","executionInfo":{"status":"ok","timestamp":1681741670079,"user_tz":-420,"elapsed":5,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"1ac392a3-9631-4f45-b25b-8c7ebf822041"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Họ và tên: Lê Văn A\n","Tuổi: 20\n","Họ và tên: Lê Văn B\n","Tuổi: 18\n"]}]},{"cell_type":"markdown","source":["# Bài tập 18"],"metadata":{"id":"Hhgo33Gywg07"}},{"cell_type":"code","source":["# Viết chương trình quản lý và tính lương cho từng nhân viên của công ty\n","class Employee():\n","  def _init_(self,name,dob):\n","    self.name = name\n","    self.dob = dob\n","  def nhap(self):\n","    self.name = input('Nhập họ tên nhân viên: ')\n","    self.dob = input('Nhập ngày sinh: ')\n","  def xuat(self):\n","    print('Tên:',self.name,',Ngày sinh:',self.dob)\n","class Producer(Employee):\n","  def _init_(self,lcb,product):\n","    Employee._init_(self)\n","    self.lcb = lcb\n","    self.product = product\n","  def nhap(self):\n","    Employee.nhap(self)\n","    self.lcb = int(input('Nhập lương cơ bản: '))\n","    self.product = int(input('Nhập số sản phẩm làm ra: '))\n","  def xuat(self):\n","    Employee.xuat(self)\n","    print('Lương cơ bản:',self.lcb,',Số sản phẩm làm ra:',self.product)\n","  def CalSalary(self):\n","    return self.lcb + self.product*5000\n","\n","class office_staff(Employee):\n","  def _init_(self,wd):\n","    Employee._init_(self)\n","    self.wd = wd\n","  def nhap(self):\n","    Employee.nhap(self)\n","    self.wd = int(input('Nhập số ngày làm việc: '))\n","  def xuat(self):\n","    Employee.xuat(self)\n","    print('Số ngày làm việc:',self.wd)\n","  def CalSalary(self):\n","    return self.wd*100000"],"metadata":{"id":"2hECTJz2wj3K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["A = Producer()\n","A.nhap()\n","A.xuat()\n","print('Lương:',A.CalSalary(),'VND')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HW9SQZiazgfp","executionInfo":{"status":"ok","timestamp":1681208084765,"user_tz":-420,"elapsed":30792,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"01452d3d-8c1d-43aa-de9e-a291d54c44dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập họ tên nhân viên: Hoàng Đình Hữu\n","Nhập ngày sinh: 6/6/2002\n","Nhập lương cơ bản: 6000000\n","Nhập số sản phẩm làm ra: 500\n","Tên: Hoàng Đình Hữu ,Ngày sinh: 6/6/2002\n","Lương cơ bản: 6000000 ,Số sản phẩm làm ra: 500\n","Lương: 8500000 VND\n"]}]},{"cell_type":"code","source":["B = office_staff()\n","B.nhap()\n","B.xuat()\n","print('Lương:',B.CalSalary(),'VND')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HdrtGSBJz6VX","executionInfo":{"status":"ok","timestamp":1681208143135,"user_tz":-420,"elapsed":11871,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"468a4c8f-4f22-405a-962e-f3a748c36d69"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhập họ tên nhân viên: Hoàng Đình Hữu\n","Nhập ngày sinh: 6/6/2002\n","Nhập số ngày làm việc: 20\n","Tên: Hoàng Đình Hữu ,Ngày sinh: 6/6/2002\n","Số ngày làm việc: 20\n","Lương: 2000000 VND\n"]}]},{"cell_type":"markdown","source":["# Bài tập 29\n"],"metadata":{"id":"e5KTrlb8_KwO"}},{"cell_type":"code","source":["class player():\n","  def _init_(self,level,cult):\n","    self.level = level\n","    self.dmg = level*5\n","    self.cult = cult\n","  def nhap(self):\n","    d = int(input('Vui lòng nhập cấp độ của người chơi: '))\n","    self.level = d\n","    self.cult = input('Vui lòng nhập môn phái của người chơi: ')\n","    self.dmg = d*5\n","\n","class monster():\n","  def _init_(self,level,cult):\n","    self.cult = cult\n","    self.level = level\n","  def nhap(self):\n","    self.level = int(input('Vui lòng nhập cấp độ của quái vật: '))\n","    self.cult = input('Vui lòng nhập hành của quái vật: ')\n","class normal_monster(monster):\n","  def _init_(self,dmg):\n","    monster._init_(self)\n","    self.dmg = self.dmg*3\n","  def nhap(self):\n","    monster.nhap(self)\n","    self.dmg = self.level*3\n","class boss(monster):\n","  def _init_(self,dmg):\n","    monster._init_(self)\n","    self.dmg = self.dmg*7\n","  def nhap(self):\n","    monster.nhap(self)\n","    self.dmg = self.level*7 "],"metadata":{"id":"dsWXGWkL_KPW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["phai = {'Ngũ Độc giáo':'Mộc','Đường Môn':'Mộc',\n","        'Cái Bang':'Hỏa','Thiên Nhẫn Giáo':'Hỏa',\n","        'Thiếu Lâm':'Kim','Thiên Vương bang':'Kim',\n","        'Nga My':'Thủy','Thúy Yến môn':'Thủy',\n","        'Côn Lôn':'Thổ','Võ Đang':'Thổ'}"],"metadata":{"id":"DuywBjpSKeOM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(phai['Đường Môn'],phai['Ngũ Độc giáo'])\n","print(phai['Võ Đang'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qKttOVjkKgX2","executionInfo":{"status":"ok","timestamp":1681744844676,"user_tz":-420,"elapsed":10,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"44242c9c-0b29-4746-a2ab-6f542a61a003"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mộc Mộc\n","Thổ\n"]}]},{"cell_type":"markdown","source":["1. Tạo và quản lý một danh sách các người chơi và quái vật"],"metadata":{"id":"4WU8BP-RQ1TR"}},{"cell_type":"code","source":["list_player_monster = []\n","print('Chú thích:')\n","print('0: người chơi')\n","print('1: quái vật')\n","print('Quái vật gồm 2 loại: normal - n và boss - b')\n","phai = {'Mộc':['Ngũ Độc giáo','Đường Môn'],'Hỏa':['Cái Bang','Thiên Nhẫn Giáo'],'Kim':['Thiếu Lâm','Thiên Vương bang'],'Thủy':['Nga My','Thúy Yến môn'],'Thổ':['Côn Lôn','Võ Đang']}\n","n = int(input('Chọn tổng số lượng người chơi và quái vật: '))\n","for i in range(n):\n","  d = int(input('Nhập loại:'))\n","  while (d!=0 and d!=1):\n","    d = int(input('Loại không hợp lệ, vui lòng nhập lại: '))\n","  if d == 0:\n","    a = player()\n","    a.nhap()\n","    list_player_monster.append(a)\n","  else:\n","    k = input('Vui lòng nhập loại quái vật: ')\n","    while (k!='n' and k!='b'):\n","      k = input('Loại quái vật không hợp lệ, vui lòng nhập lại: ')\n","    if k == 'n':\n","      a = normal_monster()\n","      a.nhap()\n","      list_player_monster.append(a)\n","    else: \n","      a = boss()\n","      a.nhap()\n","      list_player_monster.append(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mPFtQdVqCG00","executionInfo":{"status":"ok","timestamp":1681744003424,"user_tz":-420,"elapsed":79599,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"14dca56e-d36a-47d4-9ba8-4537e0078905"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Chú thích:\n","0: người chơi\n","1: quái vật\n","Quái vật gồm 2 loại: normal - n và boss - b\n","Chọn tổng số lượng người chơi và quái vật: 5\n","Nhập loại:0\n","Vui lòng nhập cấp độ của người chơi: 110\n","Vui lòng nhập môn phái của người chơi: Võ Đang\n","Nhập loại:1\n","Vui lòng nhập loại quái vật: b\n","Vui lòng nhập cấp độ của quái vật: 100\n","Vui lòng nhập hành của quái vật: Hỏa\n","Nhập loại:0\n","Vui lòng nhập cấp độ của người chơi: 120\n","Vui lòng nhập môn phái của người chơi: Thiếu Lâm\n","Nhập loại:1\n","Vui lòng nhập loại quái vật: n\n","Vui lòng nhập cấp độ của quái vật: 140\n","Vui lòng nhập hành của quái vật: Thủy\n","Nhập loại:1\n","Vui lòng nhập loại quái vật: n\n","Vui lòng nhập cấp độ của quái vật: 135\n","Vui lòng nhập hành của quái vật: Kim\n"]}]},{"cell_type":"markdown","source":["2. Cho biết phần tử có mức sát thương cao nhất trong danh sách"],"metadata":{"id":"uutJTPi-QrM6"}},{"cell_type":"code","source":["def damage(a):\n","  return a.dmg\n","list_player_monster.sort(reverse=True,key=damage)\n","for p in list_player_monster:\n","  print(p.level,p.cult,p.dmg)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EOV7lupUHlaf","executionInfo":{"status":"ok","timestamp":1681744357703,"user_tz":-420,"elapsed":385,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"9583a6fb-adce-492d-da11-71a6cfeded41"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100 Hỏa 700\n","120 Thiếu Lâm 600\n","110 Võ Đang 550\n","140 Thủy 420\n","135 Kim 405\n"]}]},{"cell_type":"markdown","source":["3. Cho 2 phần tử A và B, so sánh giá trị sát thương mà A tác động lên B và ngược lại"],"metadata":{"id":"g8CVTXA6Q7sm"}},{"cell_type":"code","source":["def check(a):\n","  phai = ['Ngũ Độc giáo','Đường Môn','Cái Bang','Thiên Nhẫn Giáo','Thiếu Lâm','Thiên Vương bang','Nga My','Thúy Yến môn','Côn Lôn','Võ Đang']\n","  if a.cult not in phai:\n","    return 0\n","  return 1 \n","def TSTK(a,b,phai):\n","  e = 0\n","  ts = {'Kim':4,'Thủy':3,'Mộc':2,'Hỏa':1,'Thổ':0}\n","  c = a.cult\n","  d = b.cult \n","  print(c,d)\n","  if check(a)==1: c = phai[c]\n","  if check(b)==1: d = phai[d]\n","  print(c,d)\n","  e = ts[c]-ts[d]\n","  print(e)\n","  if e == -1 or e == 4: return -1\n","  elif e == 1 or e ==-4: return 1\n","  elif e == -3:return 2\n","  elif e == 2: return -2\n","  return 0\n","\n","\n","def calcDmg(a,b,phai):\n","  d = TSTK(a,b,phai)\n","  dmg_a, dmg_b = a.dmg, b.dmg\n","  if d==1:\n","    dmg_a= int(a.dmg + a.dmg*10/100)\n","    dmg_b= b.dmg\n","  elif d==-1:\n","    dmg_a= a.dmg\n","    dmg_b= int(b.dmg + b.dmg*10/100)\n","  elif d==2:\n","    dmg_a= int(a.dmg + a.dmg*20/100)\n","    dmg_b= int(b.dmg - b.dmg*20/100)\n","  elif d==-2:\n","    dmg_a= int(a.dmg - a.dmg*20/100)\n","    dmg_b= int(b.dmg + b.dmg*20/100)\n","  print('Đối tượng 1 gây:',dmg_a,'sát thương lên đối tượng 2!')\n","  print('Đối tượng 2 gây:',dmg_b,'sát thương lên đối tượng 1!')\n","\n"],"metadata":{"id":"yvrH1RIzQ7N4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1: boss, level=100, cult='Hỏa'\n","# 2: player, level=120, cult='Thiếu Lâm'\n","# Không xảy ra tương sinh tương khắc\n","calcDmg(list_player_monster[0],list_player_monster[1],phai)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JBb14DLaWDA9","executionInfo":{"status":"ok","timestamp":1681746289231,"user_tz":-420,"elapsed":518,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"ea1f5ae9-bae7-47c1-8b89-78a016bc56b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hỏa Thiếu Lâm\n","Hỏa Kim\n","-3\n","Đối tượng 1 gây: 840 sát thương lên đối tượng 2!\n","Đối tượng 2 gây: 480 sát thương lên đối tượng 1!\n"]}]},{"cell_type":"code","source":["# 1: boss, level=100, cult='Hỏa'\n","# 2: player, level=550, cult='Võ Đang'\n","# Hỏa tương sinh Thổ => +10% dmg Hỏa\n","calcDmg(list_player_monster[0],list_player_monster[2],phai)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wsy6I8YWs83d","executionInfo":{"status":"ok","timestamp":1681745851782,"user_tz":-420,"elapsed":319,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"52aeafbb-ebad-4854-c291-898d600c40e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hỏa Võ Đang\n","Hỏa Thổ\n","1\n","Đối tượng 1 gây: 770 sát thương lên đối tượng 2!\n","Đối tượng 2 gây: 550 sát thương lên đối tượng 1!\n"]}]},{"cell_type":"code","source":["# 1: boss, level=100, cult='Hỏa'\n","# 2: normal_monster, level=140, cult= 'Thủy'\n","# Thủy tương khắc với Hỏa => +20% Thủy, -20%dmg Hỏa\n","calcDmg(list_player_monster[0],list_player_monster[3],phai)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SArggONt3Uy5","executionInfo":{"status":"ok","timestamp":1681746214295,"user_tz":-420,"elapsed":1111,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"1a9eec02-34f1-41f1-f5b6-d072ee1ff114"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hỏa Thủy\n","Hỏa Thủy\n","-2\n","Đối tượng 1 gây: 700 sát thương lên đối tượng 2!\n","Đối tượng 2 gây: 420 sát thương lên đối tượng 1!\n"]}]},{"cell_type":"code","source":["# 1: boss, level=100, cult='Hỏa'\n","# 2: normal_monster, level= 135, cult='Kim'\n","# Hỏa tương khắc với Kim => +20%dmg Hỏa, -20%dmg Kim\n","calcDmg(list_player_monster[0],list_player_monster[4],phai)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZyRE2ATy4Amn","executionInfo":{"status":"ok","timestamp":1681746162171,"user_tz":-420,"elapsed":337,"user":{"displayName":"IvanD","userId":"10630015363777225976"}},"outputId":"ad3ddf0c-6bb3-4ac1-efd3-847c635dcc16"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hỏa Kim\n","Hỏa Kim\n","-3\n","Đối tượng 1 gây: 560 sát thương lên đối tượng 2!\n","Đối tượng 2 gây: 486 sát thương lên đối tượng 1!\n"]}]}]}